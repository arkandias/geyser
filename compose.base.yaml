name: geyser
services:
  db:
    image: postgres:16
    restart: unless-stopped
    healthcheck:
      test: "pg_isready -U postgres -d geyser || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
      start_interval: 1s
    environment:
      POSTGRES_DB: "geyser"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: null
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    networks:
      - app-db
    volumes:
      - data:/var/lib/postgresql/data
      - ./postgres/init:/initdb
      - ./postgres/backups:/backups

  hasura:
    image: hasura/graphql-engine:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "curl -fsS http://localhost:8080/healthz || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
      start_interval: 1s
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: null
      HASURA_GRAPHQL_DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/geyser"
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "naming_convention"
    ports:
      - "8080:8080"
    networks:
      - app-db

networks:
  app-db:

volumes:
  data:
