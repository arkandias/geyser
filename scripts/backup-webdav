#!/usr/bin/env bash
# This script dumps the Geyser database and uploads it to a WebDAV server.
# It is intended to be scheduled via crontab for regular execution.
#
# Required environment variables can be set in:
#   .env       - Base environment file (should be versioned)
#   .env.local - Local overrides (should not be versioned)
# Or directly in the environment.
#
# Required environment variables:
#   WEBDAV_URL  - Base URL of the WebDAV server
#   WEBDAV_USER - WebDAV username
#   WEBDAV_PASS - WebDAV password
#
# Example crontab usage:
#   # Hourly backups in June and July
#   0 * * 6,7 * /path/to/scripts/backup-webdav
#
#   # Daily at 3:00 AM every month except June and July
#   0 3 * 1-5,8-12 * /path/to/scripts/backup-webdav

# Exit the script immediately if any command fails
set -e

SCRIPT_DIR="$(cd -- "$(dirname -- "$(readlink -f "${BASH_SOURCE[0]}")")" &>/dev/null && pwd)"
: "${GEYSER_HOME="$(cd "${SCRIPT_DIR}/.." &>/dev/null && pwd)"}"
readonly SCRIPT_DIR
readonly GEYSER_HOME

. "${GEYSER_HOME}"/.env
. "${GEYSER_HOME}"/.env.local

error() {
    echo "Error: $1" >&2
    exit 1
}

warn() {
    echo "Warning: $1" >&2
}

required_vars=(
    "WEBDAV_URL"
    "WEBDAV_USER"
    "WEBDAV_PASS"
)
for var in "${required_vars[@]}"; do
    if [[ -z "${!var}" ]]; then
        error "Missing required environment variable ${var}"
    fi
done

readonly LOCAL_BACKUPS_DIR="${GEYSER_HOME}/backups"
readonly REMOTE_BACKUPS_DIR="${WEBDAV_URL}/remote.php/dav/files/${WEBDAV_USER}/geyser/backups"

timestamp=$(date +%Y-%m-%d-%H-%M-%S)
readonly local_backup_dir="${LOCAL_BACKUPS_DIR}/${timestamp}"
readonly remote_backup_dir="${REMOTE_BACKUPS_DIR}/${timestamp}"
echo "Local backup directory: ${local_backup_dir}"
echo "Remote backup directory: ${remote_backup_dir}"

# Backup Geyser
"${SCRIPT_DIR}/geyser" backup --name="${timestamp}"

shopt -s nullglob
for file in "${local_backup_dir}"/*.dump; do
    if [[ -f "${file}" ]]; then
        filename="$(basename "${file}")"
        echo "Processing ${filename}..."
        hash=$(sha256sum "${local_backup_dir}/${filename}" | cut -c 1-8)
        echo "Computed checksum: ${hash}"
        filename_hash="${filename%.dump}_${hash}.dump"
        echo "Uploading ${filename_hash}..."
        if ! curl -fsS \
            -u "${WEBDAV_USER}:${WEBDAV_PASS}" \
            -T "${local_backup_dir}/${filename}" \
            "${remote_backup_dir}/${filename_hash}"; then
            warn "Failed to upload ${filename}"
            continue
        fi
    fi
done
shopt -u nullglob
