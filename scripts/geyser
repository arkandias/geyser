#!/usr/bin/env bash

#######################################
# Geyser Administration Script
# Author: Julien Hauseux <julien.hauseux@gmail.fr>
# License: GNU AGPL v3.0
#######################################

# Exit the script immediately if any command fails
set -e

###############################################################################
# HELP
###############################################################################

# Help text function
show_help() {
    cat <<EOF
Geyser ${GEYSER_VERSION}

Usage: geyser [OPTIONS] COMMAND

Core Commands:
  init                  Initialize a fresh Geyser installation
  start                 Start Geyser services
  stop                  Stop Geyser services
  restart               Restart Geyser services
  show                  Show Geyser services
  update                Update Geyser services
  cleanup               Cleanup Geyser services
  purge                 Completely remove Geyser installation and all data

Data Management:
  data-backup           Backup Geyser main database
  data-restore          Restore Geyser main database
  keycloak-export       Export Keycloak realms and users
  keycloak-import       Import Keycloak realms and users
  webdav-upload         Upload a file or a directory to a WebDAV server

Development Tools:
  compose               Docker Compose wrapper
  hasura                Hasura CLI wrapper
  kc                    Keycloak CLI access
  kcadm                 Keycloak Admin CLI access
  webhook               Webhook wrapper
  webhook-start         Start a webhook on port 9000
  webhook-stop          Terminate any process listening on port 9000

Setup:
  install-completion    Install zsh completion (using oh-my-zsh)

Options:
  -h, --help            Show this help message
  -v, --version         Show version information
  --log-level LEVEL     Set log level [silent|debug|info|warn|error]
  --silent              Set log level to silent
  --debug               Set log level to debug
  --env ENV             Set deployment environment [development|production]
  --dev                 Set deployment environment to development
  --prod                Set deployment environment to production
  --domain DOMAIN       Set domain name for deployment (e.g., geyser.example.com)
  --as-service          Run as a systemd service (affects logging)

Run 'geyser COMMAND --help' for more information on a command.
EOF
}

###############################################################################
# PATHS & DIRECTORIES
###############################################################################

# Absolute path to the directory containing the current script
SCRIPT_DIR="$(cd -- "$(dirname -- "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
declare -r SCRIPT_DIR

# Absolute path to the application base directory
GEYSER_HOME="$(cd "${SCRIPT_DIR}/.." && pwd)"
declare -rx GEYSER_HOME

# Geyser version
GEYSER_VERSION="$(cat "${GEYSER_HOME}/VERSION")"
declare -rx GEYSER_VERSION

# Directories paths
declare -r DB_BACKUPS_DIR="${GEYSER_HOME}/db/backups"
declare -r KC_BACKUPS_DIR="${GEYSER_HOME}/keycloak/backups"
declare -r CERTS_DIR="${GEYSER_HOME}/certs"
declare -r KEYS_DIR="${GEYSER_HOME}/keys"
declare -r LOGS_DIR="${GEYSER_HOME}/logs"

# Create required directories
mkdir -p "${DB_BACKUPS_DIR}"
mkdir -p "${KC_BACKUPS_DIR}"
mkdir -p "${CERTS_DIR}"
mkdir -p "${KEYS_DIR}"
mkdir -p "${LOGS_DIR}"

###############################################################################
# LOAD LIBRARIES
###############################################################################

shopt -s globstar
for file in "${SCRIPT_DIR}"/lib/**/*.sh; do
    if [[ -f "${file}" ]]; then
        # shellcheck disable=SC1090
        source "${file}"
    fi
done
shopt -u globstar

###############################################################################
# MAIN
###############################################################################

main() {
    # If no arguments provided, show help
    if [[ "$#" -eq 0 ]]; then
        show_help
        exit 0
    fi

    # Parse options
    while [[ "$#" -gt 0 ]]; do
        case "$1" in
        -h | --help)
            show_help
            exit 0
            ;;
        -v | --version)
            echo "Geyser ${GEYSER_VERSION}"
            exit 0
            ;;
        --log-level)
            declare -g GEYSER_LOG_LEVEL="$2"
            shift 2
            ;;
        --silent)
            declare -g GEYSER_LOG_LEVEL="silent"
            shift
            ;;
        --debug)
            # shellcheck disable=SC2034
            declare -g GEYSER_LOG_LEVEL="debug"
            shift
            ;;
        --env)
            declare -g GEYSER_ENV="$2"
            shift 2
            ;;
        --dev)
            declare -g GEYSER_ENV="development"
            shift
            ;;
        --prod)
            # shellcheck disable=SC2034
            declare -g GEYSER_ENV="production"
            shift
            ;;
        --domain)
            # shellcheck disable=SC2034
            declare -g GEYSER_DOMAIN="$2"
            shift 2
            ;;
        --as-service)
            # shellcheck disable=SC2034
            declare -g GEYSER_AS_SERVICE="true"
            shift
            ;;
        *)
            break
            ;;
        esac
    done

    load_environment
    check_dependencies

    # Execute command
    case "$1" in
    init)
        shift
        handle_init "$@"
        ;;
    start)
        shift
        handle_start "$@"
        ;;
    stop)
        shift
        handle_stop "$@"
        ;;
    restart)
        shift
        handle_restart "$@"
        ;;
    show)
        shift
        handle_show "$@"
        ;;
    update)
        shift
        handle_update "$@"
        ;;
    cleanup)
        shift
        handle_cleanup "$@"
        ;;
    purge)
        shift
        handle_purge "$@"
        ;;
    data-backup)
        shift
        handle_data_backup "$@"
        ;;
    data-restore)
        shift
        handle_data_restore "$@"
        ;;
    keycloak-export)
        shift
        handle_keycloak_export "$@"
        ;;
    keycloak-import)
        shift
        handle_keycloak_import "$@"
        ;;
    webdav-upload)
        shift
        handle_webdav_upload "$@"
        ;;
    compose | hasura | kc | kcadm | webhook)
        cmd="_$1"
        shift
        "${cmd}" "$@"
        ;;
    webhook-start)
        shift
        handle_webhook_start "$@"
        ;;
    webhook-stop)
        shift
        handle_webhook_stop "$@"
        ;;
    install-completion)
        handle_install_completion
        ;;
    "")
        exit 0
        ;;
    *)
        error "Unknown command '$1' (see 'geyser --help')"
        exit 1
        ;;
    esac
}

main "$@"
