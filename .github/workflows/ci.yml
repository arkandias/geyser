name: CI

on:
  workflow_dispatch:
  push:
    branches: [master]
    tags:
      - "*"

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref_name }}
  cancel-in-progress: ${{ github.ref_type != 'tag' }}

env:
  FRONTEND_REPOSITORY: ghcr.io/${{ github.repository_owner }}/geyser-frontend
  BACKEND_REPOSITORY: ghcr.io/${{ github.repository_owner }}/geyser-backend

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: pnpm run format:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: pnpm run test

  build-and-publish:
    needs: [format, lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        id: vars
        run: |
          echo "date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> "${GITHUB_OUTPUT}"
          if [[ "${GITHUB_REF_TYPE}" == tag ]]; then
            VERSION=${GITHUB_REF_NAME}
            echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"
            echo "tags=${FRONTEND_REPOSITORY}:${VERSION},${FRONTEND_REPOSITORY}:latest" >> "${GITHUB_OUTPUT}"
          else
            echo "version=${GITHUB_SHA::8}" >> "${GITHUB_OUTPUT}"
            echo "tags=${FRONTEND_REPOSITORY}:edge" >> "${GITHUB_OUTPUT}"
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: backend
          push: true
          tags: ${{ steps.vars.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ steps.vars.outputs.date }}
            VERSION=${{ steps.vars.outputs.version }}
            VCS_REF=${{ github.sha }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: frontend
          push: true
          tags: ${{ steps.vars.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ steps.vars.outputs.date }}
            VERSION=${{ steps.vars.outputs.version }}
            VCS_REF=${{ github.sha }}
