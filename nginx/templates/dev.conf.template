# Use Docker's DNS resolver
resolver 127.0.0.11 valid=1y ipv6=off;

map $host $organization_key_host {
    ~^([a-zA-Z0-9\-]+)\.${NGINX_DOMAIN}$ $1;
    default "";
}

map $http_x_forwarded_host $organization_key_forwarded {
    ~^([a-zA-Z0-9\-]+)\.${NGINX_DOMAIN}$ $1;
    default "";
}

# Keycloak server
server {
    listen 80;
    server_name auth.${NGINX_DOMAIN};

    location ~ ^/(realms|resources)/ {
        set $proxy_target ${NGINX_PROXY_KEYCLOAK_URL};
        include /etc/nginx/includes/proxy-common.conf;
    }
}

# Keycloak admin server
server {
    listen 80;
    server_name auth-admin.${NGINX_DOMAIN};

    location / {
        set $proxy_target ${NGINX_PROXY_KEYCLOAK_URL};
        include /etc/nginx/includes/proxy-common.conf;
    }
}

# API server
server {
    listen 80;
    server_name api.${NGINX_DOMAIN};

    location / {
        set $proxy_target ${NGINX_PROXY_API_URL};
        include /etc/nginx/includes/proxy-common.conf;
        # Set organization key based on forwarded host
        proxy_set_header X-Organization-Key $organization_key_forwarded;
    }
}

# Client server
server {
    listen 80;
    server_name *.${NGINX_DOMAIN};

    location = /check-organization {
        internal;
        proxy_pass ${NGINX_PROXY_API_URL}/organization/$organization_key_host;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_method HEAD;
    }

    location / {
        auth_request /check-organization;
        error_page 500 = @organization_not_found;

        set $proxy_target ${NGINX_PROXY_DEV_SERVER_URL};
        include /etc/nginx/includes/proxy-common.conf;
    }

    location @organization_not_found {
        add_header Content-Type text/html;
        return 404 '<html><body><h1>Organization Not Found</h1></body></html>';
    }
}
