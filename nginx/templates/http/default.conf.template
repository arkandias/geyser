# Default server configuration
server {
    listen 80 default_server;
    server_name _;
    
    # Return no response and close connection
    return 444;
}

server {
    listen 8000;
    server_name localhost;

    # Healthcheck
    location = /health {
        access_log off;
        allow 127.0.0.1;
        deny all;
        return 200 "healthy\n";
    }
}

server {
    listen 80;
    server_name ${GEYSER_HOSTNAME};
    
    # API
    location /api/ {
#        proxy_pass http://server:3000/;
        proxy_pass http://host.docker.internal:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr; # ????
        proxy_cache_bypass $http_upgrade;
    }

    # Keycloak
    location /auth/realms/ {
        proxy_pass http://keycloak:8080/realms/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /auth;
    }
    location /auth/resources/ {
        proxy_pass http://keycloak:8080/resources/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /auth;
    }

    # Hasura
    location /graphql {
        proxy_pass http://hasura:8080/v1/graphql;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /graphql;
        # these 3 lines are necessary to handle WebSocket connections
        proxy_http_version 1.1;
        proxy_set_header Connection "upgrade";
        proxy_set_header Upgrade $http_upgrade;
    }

    # SPA
    location / {
#        auth_request /api/auth/verify;
#        error_page 401 = @auth_redirect;
        proxy_pass http://host.docker.internal:5173/;
#        root /usr/share/nginx/html;
#        try_files $uri $uri/ /index.html =404;
    }
}
