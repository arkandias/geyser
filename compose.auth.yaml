services:
  kc-db:
    image: postgres:16
    restart: unless-stopped
    healthcheck:
      test: "pg_isready -U postgres -d keycloak || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
      start_interval: 1s
    environment:
      POSTGRES_DB: "keycloak"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${POSTGRES_KC_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5433:5432"
    networks:
      - auth-db
    volumes:
      - kc-data:/var/lib/postgresql/data
      - ./postgres/backups:/backups

  keycloak:
    build: keycloak
    restart: unless-stopped
    depends_on:
      kc-db:
        condition: service_healthy
    healthcheck:
      test: "/opt/healthcheck/healthcheck.sh || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 120s
      start_interval: 1s
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: "admin"
      KC_BOOTSTRAP_ADMIN_PASSWORD: null
      KC_DB_URL: "jdbc:postgresql://kc-db:5432/keycloak"
      KC_DB_USERNAME: "postgres"
      KC_DB_PASSWORD: "${POSTGRES_KC_PASSWORD}"
      KC_DB_SCHEMA: "public"
      KC_HTTP_ENABLED: "true"
      HASURA_CLIENT_ROOT_URL: "http://${GEYSER_HOSTNAME}"
    ports:
      - "8081:8080"
      - "9000:9000"
    networks:
      - auth-db
      - auth-api
    volumes:
      - ./keycloak/healthcheck:/opt/healthcheck:ro
      - ./keycloak/templates:/opt/keycloak/data/import:ro
      - ./keycloak/backups:/opt/keycloak/data/backups
    command: start --optimized --import-realm

  hasura:
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"ES256","key":"-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEk3szFXMsLDWEgmfadSTWS3IJkGZy\nQqJgEYZ+dzANRdPUwDZ7yru2p1CVRJxh9gFXgET/KaZzTY372LAq9e0QWw==\n-----END PUBLIC KEY-----\n","audience":"hasura","issuer":"http://localhost","claims_namespace_path":"$","header":{"type":"Cookie","name":"access_token"}}'
    networks:
      - auth-api

networks:
  auth-db:
  auth-api:

volumes:
  kc-data:
